version: "3.9"

# docker-compose automatically loads .env at the project root
services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped

  api:
    build: .
    env_file: .env
    environment:
      - REDIS_URL=${REDIS_URL}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data:/app/data          # ← mount directory
    depends_on: [redis]
    ports:
      - "8000:8000"

  worker:
    build: .
    command: celery -A tasks.celery_app worker --loglevel=info
    env_file: .env
    environment:
      - REDIS_URL=${REDIS_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data:/app/data          # ← same mount
    depends_on: [redis, api]

  streamlit:
    build: .
    command: >
      streamlit run ui/app.py
      --server.port=8501
      --server.address=0.0.0.0
    env_file: .env
    environment:
      - BACKEND=${BACKEND_URL:-http://api:8000}
    volumes:
      - ./data:/app/data          # ← so UI can read the DB if needed
    depends_on: [api]
    ports:
      - "8501:8501"
